class Solution {
public:
    int firstCompleteIndex(vector<int>& arr, vector<vector<int>>& mat) {
        int m = mat.size();
        int n = mat[0].size();

        vector<pair<int,int>> mp(m*n);
        int ans = 0;

        for(int i = 0;i < m;i++){
            for(int j = 0;j < n;j++){
                mp[mat[i][j]-1].first = i;
                mp[mat[i][j]-1].second = j;
            }
        }

        vector<int> row(m,n);
        vector<int> col(n,m);


        for(int& num : arr){

            pair<int,int> index = mp[num-1];

            // mat[index.first][index.second] = -1;

            // int flag = 0;

            // for(int i = 0;i < n;i++){
            //     if(mat[index.first][i] != -1){
            //         flag = 1;
            //         break;
            //     }
            // }

            // if(!flag) return ans;

            // for(int i = 0;i < m;i++){
            //     if(mat[i][index.second] != -1){
            //         flag = 0;
            //         break;
            //     }
            // }

            // if(flag) return ans;

            // cout<<index.first<<" "<<index.second<<endl;



            if(--row[index.first] == 0) return ans;
            if(--col[index.second] == 0) return ans;
            ans++;
        }


    return -1;
    }
};
